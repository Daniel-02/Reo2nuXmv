MODULE main
VAR
	time: 0..3;
	automato: finalAutomata(time);
ASSIGN
	init(time) := 0;
	next(time) := case
		time < 3: time + 1;
		TRUE: time;
esac;

MODULE finalAutomata(time)
VAR
	ports: portsModule;
	cs: {q0q0,p0q0,p1q0};
ASSIGN
	init(cs) := {q0q0};
TRANS
	((cs = q0q0 & ports.e[time] = NULL & ports.b[time] = NULL & ports.a[time] = 0) -> next(cs) = p0q0) &
	((cs = q0q0 & ports.e[time] = NULL & ports.b[time] = NULL & ports.a[time] = 1) -> next(cs) = p1q0) &
	((cs = p0q0 & ports.a[time] = NULL & ports.e[time] = 0 & ports.e[time] != NULL & ports.e[time] = ports.b[time]) -> next(cs) = q0q0) &
	((cs = p1q0 & ports.a[time] = NULL & ports.e[time] = 1 & ports.e[time] != NULL & ports.e[time] = ports.b[time]) -> next(cs) = q0q0);

MODULE portsModule
FROZENVAR
	a : array 0..3 of {NULL, 0, 1};
	e : array 0..3 of {NULL, 0, 1};
	b : array 0..3 of {NULL, 0, 1};
ASSIGN
	init(a[0]) := 1;
	init(a[1]) := 1;
	init(a[2]) := 0;
	init(e[0]) := 1;
	init(e[1]) := NULL;
	init(e[2]) := 1;
	init(b[0]) := 1;
	init(b[1]) := 0;
	init(b[2]) := 0;
